.flexbox {
	display: -webkit-box;
	display: -moz-box;
	display: -ms-flexbox;
	display: -webkit-flex; 
	display: flex;
}
.flexbox-inline {
    display: -webkit-inline-box;
    display: -webkit-inline-flex;
    display: -ms-inline-flexbox;
    display: inline-flex;
    vertical-align: middle;
}
.flexbox-wrap {
    -webkit-flex-wrap: wrap;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap;
}
.flex-basis(@val) {
	-ms-flex-preferred-size: @val;
	flex-basis: @val;
}
.flex-grow(@val) {
	-webkit-box-flex: @val;
	-ms-flex-positive: @val;
	flex-grow: @val;
}
.flex-direction-column {
	-webkit-box-orient: vertical;
	-moz-box-orient: vertical;
	-webkit-box-direction: vertical;
	-moz-box-direction: vertical;
	-webkit-flex-direction: column;
	-ms-flex-direction: column;
	flex-direction: column;
}
.flex(@grow, @shrink, @width) {
	-webkit-box-flex: @grow;
	-ms-flex: @grow @shrink @width;
	flex: @grow @shrink @width;
}
.flex-order(@val) {
	-webkit-box-ordinal-group: @val + 1;
	-ms-flex-order: @val;
	order: @val;
}

.create-columns(@name, @n, @i: 1, @child: ~"") when (@i =< @n) {
	@{child}.@{name}-@{i} {
		.column(@i);
	}
	.create-columns(@name, @n, (@i + 1), @child);
}
.column (@size: 12; @columns: 12) {
    .flex(0, 0, percentage(@size / @columns));
    max-width: percentage(@size / @columns);
}

.grid(@size: ~'', @n, @i: 1) when (@i =< @n) {
	.row@{size}-@{i} {
		.col {
			.column((@n / @i));
		}
	}
	.grid(@size, @n, (@i + 1));
}
.order(@size: ~'', @n) {
	.order@{size}-first {
		.flex-order(-1);
	}
	.order@{size}-last {
		.flex-order(13);
	}
	.order-create(@size, @n);
}
.order-create(@size: ~'', @n, @i: 0) when (@i =< @n) {
	.order@{size}-@{i} {
		.flex-order(@i);
	}
	.order-create(@size, @n, (@i + 1));
}
.offset(@size: ~'', @n) {
	.offset-create(@size, @n);
}
.offset-create(@size: ~'', @n, @i: 1) when (@i =< @n){
	.offset@{size}-@{i} {
		margin-left: percentage(@i/@n);
	}
	.offset-create(@size, @n, (@i + 1));
}

.space(@prop, @size, @val) {
	.@{size} {
		@{prop}: @val !important;
	}
	.@{size}-v {
		@{prop}-top: @val !important;
		@{prop}-bottom: @val !important;
	}
	.@{size}-t {
		@{prop}-top: @val !important;
	}
	.@{size}-b {
		@{prop}-bottom: @val !important;
	}
	.@{size}-h {
		@{prop}-left: @val !important;
		@{prop}-right: @val !important;
	}
	.@{size}-l {
		@{prop}-left: @val !important;
	}
	.@{size}-r {
		@{prop}-right: @val !important;
	}
}
.property (@class, @prop, @val) {
	.@{class} {
		@{prop}: @val !important;
	}
}

.box-shadow(@shadow) {
    -webkit-box-shadow: @shadow; // iOS <4.3 & Android <4.1
    box-shadow: @shadow;
}



.animate(@subject: all, @duration: 0.3s) {

    -webkit-transition: @subject @duration ease-in-out;
    -moz-transition: @subject @duration ease-in-out;
    -o-transition: @subject @duration ease-in-out;
    -ms-transition: @subject @duration ease-in-out;
    transition: @subject @duration ease-in-out;
}


.animation(@args) {
    -webkit-animation: @args;
    -moz-animation: @args;
    -ms-animation: @args;
    -o-animation: @args;
    animation: @args;
}
.animation-delay(@delay) {
    -webkit-animation-delay: @delay;
    -moz-animation-delay: @delay;
    -ms-animation-delay: @delay;
    -o-animation-delay: @delay;
    animation-delay: @delay;
}
.animation-direction(@direction) {
    -webkit-animation-direction: @direction;
    -moz-animation-direction: @direction;
    -ms-animation-direction: @direction;
    -o-animation-direction: @direction;
}
.animation-duration(@duration) {
    -webkit-animation-duration: @duration;
    -moz-animation-duration: @duration;
    -ms-animation-duration: @duration;
    -o-animation-duration: @duration;
}
.animation-fill-mode(@mode) {
    -webkit-animation-fill-mode: @mode;
    -moz-animation-fill-mode: @mode;
    -ms-animation-fill-mode: @mode;
    -o-animation-fill-mode: @mode;
    animation-fill-mode: @mode;
}
.animation-iteration-count(@count) {
    -webkit-animation-iteration-count: @count;
    -moz-animation-iteration-count: @count;
    -ms-animation-iteration-count: @count;
    -o-animation-iteration-count: @count;
    animation-iteration-count: @count;
}
.animation-name(@name) {
    -webkit-animation-name: @name;
    -moz-animation-name: @name;
    -ms-animation-name: @name;
    -o-animation-name: @name;
    animation-name: @name;
}
.animation-play-state(@state) {
    -webkit-animation-play-state: @state;
    -moz-animation-play-state: @state;
    -ms-animation-play-state: @state;
    -o-animation-play-state: @state;
    animation-play-state: @state;
}
.animation-timing-function(@function) {
    -webkit-animation-timing-function: @function;
    -moz-animation-timing-function: @function;
    -ms-animation-timing-function: @function;
    -o-animation-timing-function: @function;
    animation-timing-function: @function;
}